name: deploy
on:
  push:
    branches: ["main"]
    paths:
      - "infra/terraform/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
  TF_STATE_TABLE:  ${{ secrets.TF_STATE_TABLE }}
  IMAGE_TAG: ${{ github.sha }}
  ECR_BACKEND: cicd-final-backend
  ECR_FRONTEND: cicd-final-frontend

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN || '' }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        working-directory: infra/terraform
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          TF_BUCKET: ${{ env.TF_STATE_BUCKET }}
          TF_TABLE:  ${{ env.TF_STATE_TABLE }}
        run: |
          terraform init -backend-config="bucket=$TF_BUCKET" -backend-config="key=cicd-final/terraform.tfstate" -backend-config="region=$AWS_REGION" -backend-config="dynamodb_table=$TF_TABLE"

      - name: Terraform apply
        working-directory: infra/terraform
        env:
          TF_VAR_aws_region: ${{ env.AWS_REGION }}
          TF_VAR_project_name: cicd-final
          TF_VAR_image_tag: ${{ env.IMAGE_TAG }}
          TF_VAR_backend_image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_BACKEND }}:${{ env.IMAGE_TAG }}
          TF_VAR_frontend_image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_FRONTEND }}:${{ env.IMAGE_TAG }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: terraform apply -auto-approve
