name: build-and-push
on:
  push:
    branches: ["main"]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/images.yml"

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_BACKEND: cicd-final-backend
  ECR_FRONTEND: cicd-final-frontend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  push-images:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN || '' }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Ensure ECR repos
        run: |
          aws ecr describe-repositories --repository-names $ECR_BACKEND || aws ecr create-repository --repository-name $ECR_BACKEND
          aws ecr describe-repositories --repository-names $ECR_FRONTEND || aws ecr create-repository --repository-name $ECR_FRONTEND

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push backend
        run: |
          BACKEND_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_BACKEND}:${IMAGE_TAG}
          docker build -t $BACKEND_URI ./backend
          docker push $BACKEND_URI
          echo "BACKEND_URI=$BACKEND_URI" >> $GITHUB_ENV

      - name: Build & push frontend
        run: |
          FRONTEND_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_FRONTEND}:${IMAGE_TAG}
          docker build -t $FRONTEND_URI ./frontend
          docker push $FRONTEND_URI
          echo "FRONTEND_URI=$FRONTEND_URI" >> $GITHUB_ENV

      - name: Export image URIs
        uses: actions/upload-artifact@v4
        with:
          name: image-uris
          path: |
            /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/image-uris.txt
        env:
          OUT_FILE: image-uris.txt
        run: |
          echo "BACKEND_URI=$BACKEND_URI" > image-uris.txt
          echo "FRONTEND_URI=$FRONTEND_URI" >> image-uris.txt
