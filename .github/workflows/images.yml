name: images

on:
  push:
    branches: ["**"]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/images.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/images.yml"

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        service: [backend, frontend]
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - uses: actions/checkout@v4

      # Learner Lab / temporary creds (requires session token)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          if [ "${{ matrix.service }}" = "backend" ]; then REPO="${{ secrets.ECR_REPO_BACKEND }}"; else REPO="${{ secrets.ECR_REPO_FRONTEND }}"; fi
          aws ecr describe-repositories --repository-names "$REPO" >/dev/null 2>&1 \
            || aws ecr create-repository --repository-name "$REPO" >/dev/null

      - name: Build and push image
        run: |
          if [ "${{ matrix.service }}" = "backend" ]; then REPO="${{ secrets.ECR_REPO_BACKEND }}"; DIR="backend"; else REPO="${{ secrets.ECR_REPO_FRONTEND }}"; DIR="frontend"; fi
          REGISTRY="${{ steps.login-ecr.outputs.registry }}"
          IMAGE="$REGISTRY/$REPO"
          TAG="${{ github.sha }}"
          docker build -t "$IMAGE:$TAG" -t "$IMAGE:latest" "$DIR"
          docker push "$IMAGE:$TAG"
          docker push "$IMAGE:latest"
