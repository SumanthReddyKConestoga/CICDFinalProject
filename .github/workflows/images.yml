name: images`non:`n  push: { branches: ["**"], paths: ["backend/**","frontend/**",".github/workflows/images.yml"] }`n  pull_request: { branches: ["main"], paths: ["backend/**","frontend/**",".github/workflows/images.yml"] }`n`njobs:`n  build-push:`n    runs-on: ubuntu-latest`n    strategy:`n      matrix:`n        service: [backend, frontend]`n    env:`n      AWS_REGION: ${{ secrets.AWS_REGION }}`n      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}`n    steps:`n      - uses: actions/checkout@v4`n      - uses: aws-actions/configure-aws-credentials@v4`n        with:`n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}`n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}`n          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}`n          aws-region: ${{ secrets.AWS_REGION }}`n      - uses: aws-actions/amazon-ecr-login@v2`n        id: login-ecr`n      - name: Ensure ECR repository`n        run: |`n          REPO="${{ matrix.service }}"`n          if [ "$REPO" = "backend" ]; then REPO="${{ secrets.ECR_REPO_BACKEND }}"; else REPO="${{ secrets.ECR_REPO_FRONTEND }}"; fi`n          aws ecr describe-repositories --repository-names "$REPO" >/dev/null 2>&1 || aws ecr create-repository --repository-name "$REPO" >/dev/null`n      - name: Build & push image`n        run: |`n          if [ "${{ matrix.service }}" = "backend" ]; then REPO="${{ secrets.ECR_REPO_BACKEND }}"; else REPO="${{ secrets.ECR_REPO_FRONTEND }}"; fi`n          IMAGE="${{ steps.login-ecr.outputs.registry }}/$REPO"`n          TAG="${{ github.sha }}"`n          docker build -t "$IMAGE:$TAG" -t "$IMAGE:latest" ${{ matrix.service }}`n          docker push "$IMAGE:$TAG"`n          docker push "$IMAGE:latest"`n